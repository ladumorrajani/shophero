{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mac/Documents/Project/shophero/src/components/PopularOrgSection/PopularOrgSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { PopularOrgSectionStyle, Heading, MainHeading, FilterPanel, FilterBox, OrgContent, InputSearch, CategoryButton, PopOverStyle, CheckBoxWrap, CardListing, OrganizationCardStyle } from \"./PopularOrgSection.styles\";\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport Button from \"../Button/Button\";\nimport { withRouter } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport \"../../i18n\";\nimport { useTranslation } from \"react-i18next\";\nconst PER_PAGE = 2;\n\nconst PopularOrgSection = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    popularSecProps\n  } = props.PopularSecData;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchText, setSeachText] = React.useState(\"\");\n  const [selectedCategories, setSelectedCategories] = React.useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const offset = currentPage * PER_PAGE;\n\n  function handlePageClick({\n    selected: selectedPage\n  }) {\n    setCurrentPage(selectedPage);\n  }\n\n  const pageCount = Math.ceil(popularSecProps.CardListData.length / PER_PAGE);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const filteredList = t(\"ngo_page.pop_sec.card_list_data\", {\n    returnObjects: true\n  }).filter(cl => !selectedCategories.length || selectedCategories.includes(\"all\") || selectedCategories.includes(cl.category)).filter(cl => cl.name.toLowerCase().search(searchText.toLowerCase()) !== -1);\n  return /*#__PURE__*/_jsxDEV(PopularOrgSectionStyle, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: /*#__PURE__*/_jsxDEV(MainHeading, {\n          children: t(\"ngo_page.pop_sec.title\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterPanel, {\n        children: [/*#__PURE__*/_jsxDEV(FilterBox, {\n          className: `${anchorEl ? \"active\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(InputSearch, {\n            placeholder: \"Search Organization\",\n            value: searchText,\n            onChange: e => setSeachText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CategoryButton, {\n            \"aria-describedby\": \"category\",\n            onClick: handleClick,\n            children: t(\"ngo_page.pop_sec.cat_txt\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PopOverStyle, {\n            id: \"category\",\n            open: open,\n            anchorEl: anchorEl,\n            onClose: handleClose,\n            anchorOrigin: {\n              vertical: \"bottom\",\n              horizontal: \"right\"\n            },\n            transformOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CheckBoxWrap, {\n              children: t(\"ngo_page.pop_sec.cat_data\", {\n                returnObjects: true\n              }).map((category, i) => {\n                return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    name: category.name,\n                    checked: selectedCategories.includes(category.name),\n                    onChange: e => {\n                      if (e.target.checked) {\n                        if (category.name === \"all\") {\n                          setSelectedCategories([\"all\"]);\n                        } else {\n                          const filtered = selectedCategories.length === 1 && selectedCategories.includes(\"all\") ? selectedCategories.filter(category => category !== \"all\") : selectedCategories;\n                          setSelectedCategories([...filtered, category.name]);\n                        }\n                      } else {\n                        const filtered = selectedCategories.filter(c => c !== category.name);\n                        setSelectedCategories([...filtered]);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 25\n                  }, this),\n                  label: category.title\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => props.history.push(\"/register\"),\n          children: t(\"ngo_page.pop_sec.btn_txt\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrgContent, {\n        children: /*#__PURE__*/_jsxDEV(CardListing, {\n          children: filteredList.slice(offset, offset + PER_PAGE).map((data, i) => {\n            return /*#__PURE__*/_jsxDEV(OrganizationCardStyle, { ...data,\n              src: popularSecProps.CardListData[i].src\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"Previous\",\n        nextLabel: \"Next\",\n        pageCount: pageCount,\n        onPageChange: handlePageClick,\n        containerClassName: \"pagination\",\n        previousLinkClassName: \"pagination__link\",\n        nextLinkClassName: \"pagination__link\",\n        disabledClassName: \"pagination__link--disabled\",\n        activeClassName: \"pagination__link--active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopularOrgSection, \"GduF4e7JrckaMHF6vstQg8XDlaI=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PopularOrgSection;\nexport default _c2 = withRouter(PopularOrgSection);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopularOrgSection\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Documents/Project/shophero/src/components/PopularOrgSection/PopularOrgSection.js"],"names":["React","useState","PopularOrgSectionStyle","Heading","MainHeading","FilterPanel","FilterBox","OrgContent","InputSearch","CategoryButton","PopOverStyle","CheckBoxWrap","CardListing","OrganizationCardStyle","Checkbox","FormControlLabel","Button","withRouter","ReactPaginate","useTranslation","PER_PAGE","PopularOrgSection","props","t","popularSecProps","PopularSecData","anchorEl","setAnchorEl","searchText","setSeachText","selectedCategories","setSelectedCategories","currentPage","setCurrentPage","offset","handlePageClick","selected","selectedPage","pageCount","Math","ceil","CardListData","length","handleClick","event","currentTarget","handleClose","open","Boolean","filteredList","returnObjects","filter","cl","includes","category","name","toLowerCase","search","e","target","value","vertical","horizontal","map","i","checked","filtered","c","title","history","push","slice","data","src"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  PopularOrgSectionStyle,\n  Heading,\n  MainHeading,\n  FilterPanel,\n  FilterBox,\n  OrgContent,\n  InputSearch,\n  CategoryButton,\n  PopOverStyle,\n  CheckBoxWrap,\n  CardListing,\n  OrganizationCardStyle,\n} from \"./PopularOrgSection.styles\";\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport Button from \"../Button/Button\";\nimport { withRouter } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport \"../../i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PER_PAGE = 2;\n\nconst PopularOrgSection = (props) => {\n  const { t } = useTranslation();\n  const { popularSecProps } = props.PopularSecData;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchText, setSeachText] = React.useState(\"\");\n  const [selectedCategories, setSelectedCategories] = React.useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const offset = currentPage * PER_PAGE;\n\n  function handlePageClick({ selected: selectedPage }) {\n    setCurrentPage(selectedPage);\n  }\n  const pageCount = Math.ceil(popularSecProps.CardListData.length / PER_PAGE);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const filteredList = t(\"ngo_page.pop_sec.card_list_data\", {\n    returnObjects: true,\n  })\n    .filter(\n      (cl) =>\n        !selectedCategories.length ||\n        selectedCategories.includes(\"all\") ||\n        selectedCategories.includes(cl.category)\n    )\n    .filter(\n      (cl) => cl.name.toLowerCase().search(searchText.toLowerCase()) !== -1\n    );\n\n  return (\n    <PopularOrgSectionStyle>\n      <div className=\"container\">\n        <Heading>\n          <MainHeading>{t(\"ngo_page.pop_sec.title\")}</MainHeading>\n        </Heading>\n        <FilterPanel>\n          <FilterBox className={`${anchorEl ? \"active\" : \"\"}`}>\n            <InputSearch\n              placeholder=\"Search Organization\"\n              value={searchText}\n              onChange={(e) => setSeachText(e.target.value)}\n            />\n            <CategoryButton aria-describedby=\"category\" onClick={handleClick}>\n              {t(\"ngo_page.pop_sec.cat_txt\")}\n            </CategoryButton>\n            <PopOverStyle\n              id=\"category\"\n              open={open}\n              anchorEl={anchorEl}\n              onClose={handleClose}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n            >\n              <CheckBoxWrap>\n                {t(\"ngo_page.pop_sec.cat_data\", {\n                  returnObjects: true,\n                }).map((category, i) => {\n                  return (\n                    <FormControlLabel\n                      key={i}\n                      control={\n                        <Checkbox\n                          name={category.name}\n                          checked={selectedCategories.includes(category.name)}\n                          onChange={(e) => {\n                            if (e.target.checked) {\n                              if (category.name === \"all\") {\n                                setSelectedCategories([\"all\"]);\n                              } else {\n                                const filtered =\n                                  selectedCategories.length === 1 &&\n                                  selectedCategories.includes(\"all\")\n                                    ? selectedCategories.filter(\n                                        (category) => category !== \"all\"\n                                      )\n                                    : selectedCategories;\n                                setSelectedCategories([\n                                  ...filtered,\n                                  category.name,\n                                ]);\n                              }\n                            } else {\n                              const filtered = selectedCategories.filter(\n                                (c) => c !== category.name\n                              );\n                              setSelectedCategories([...filtered]);\n                            }\n                          }}\n                        />\n                      }\n                      label={category.title}\n                    />\n                  );\n                })}\n              </CheckBoxWrap>\n            </PopOverStyle>\n          </FilterBox>\n          <Button onClick={() => props.history.push(\"/register\")}>\n            {t(\"ngo_page.pop_sec.btn_txt\")}\n          </Button>\n        </FilterPanel>\n        <OrgContent>\n          <CardListing>\n            {filteredList.slice(offset, offset + PER_PAGE).map((data, i) => {\n              return (\n                <OrganizationCardStyle\n                  key={i}\n                  {...data}\n                  src={popularSecProps.CardListData[i].src}\n                />\n              );\n            })}\n          </CardListing>\n        </OrgContent>\n        <ReactPaginate\n          previousLabel={\"Previous\"}\n          nextLabel={\"Next\"}\n          pageCount={pageCount}\n          onPageChange={handlePageClick}\n          containerClassName={\"pagination\"}\n          previousLinkClassName={\"pagination__link\"}\n          nextLinkClassName={\"pagination__link\"}\n          disabledClassName={\"pagination__link--disabled\"}\n          activeClassName={\"pagination__link--active\"}\n        />\n      </div>\n    </PopularOrgSectionStyle>\n  );\n};\n\nexport default withRouter(PopularOrgSection);\n"]},"metadata":{},"sourceType":"module"}