{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mac/Documents/Project/shophero/src/components/StepTwo/StepTwo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { StepTwoStyle, FilterPanel, FilterBox, WorkshopCount, StepFooter, StepContent, InputSearch, CategoryButton, PopOverStyle, CheckBoxWrap, CardListing, StepContentWrap, OrganizationCardStyle } from \"./StepTwo.styles\";\nimport Button from \"../Button/Button\";\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport \"../../i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nconst StepTwo = props => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchText, setSeachText] = React.useState(\"\");\n  const [activeIndex, setActiveIndex] = React.useState(false);\n  const [selectedCategories, setSelectedCategories] = React.useState([]);\n\n  const handleSelect = index => {\n    setActiveIndex(index);\n  };\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const filteredList = t(\"home.stepper_data.step_two.card_list\", {\n    returnObjects: true\n  }).filter(cl => !selectedCategories.length || selectedCategories.includes(\"all\") || selectedCategories.includes(cl.category)).filter(cl => cl.name.toLowerCase().search(searchText.toLowerCase()) !== -1);\n  return /*#__PURE__*/_jsxDEV(StepTwoStyle, {\n    children: [/*#__PURE__*/_jsxDEV(FilterPanel, {\n      children: [/*#__PURE__*/_jsxDEV(FilterBox, {\n        className: `${anchorEl ? \"active\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(InputSearch, {\n          placeholder: t(\"home.stepper_data.step_one.search_placeholder\"),\n          value: searchText,\n          onChange: e => setSeachText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CategoryButton, {\n          \"aria-describedby\": \"category\",\n          onClick: handleClick,\n          children: t(\"home.stepper_data.step_two.category_btn\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopOverStyle, {\n          id: \"category\",\n          open: open,\n          anchorEl: anchorEl,\n          onClose: handleClose,\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"right\"\n          },\n          transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CheckBoxWrap, {\n            children: t(\"home.stepper_data.step_two.category_data\", {\n              returnObjects: true\n            }).map((category, i) => {\n              return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  name: category.name,\n                  checked: selectedCategories.includes(category.name),\n                  onChange: e => {\n                    if (e.target.checked) {\n                      if (category.name === t(\"home.stepper_data.step_two.category_data\", {\n                        returnObjects: true\n                      })[0].name) {\n                        setSelectedCategories([t(\"home.stepper_data.step_two.category_data\", {\n                          returnObjects: true\n                        })[0].name]);\n                      } else {\n                        const filtered = selectedCategories.length === 1 && selectedCategories.includes(t(\"home.stepper_data.step_two.category_data\", {\n                          returnObjects: true\n                        })[0].name) ? selectedCategories.filter(category => category !== t(\"home.stepper_data.step_two.category_data\", {\n                          returnObjects: true\n                        })[0].name) : selectedCategories;\n                        setSelectedCategories([...filtered, category.name]);\n                      }\n                    } else {\n                      const filtered = selectedCategories.filter(c => c !== category.name);\n                      setSelectedCategories([...filtered]);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this),\n                label: category.title\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WorkshopCount, {\n        children: [props.CardListData.length, \" \", t(\"home.stepper_data.step_two.org_title\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n      children: /*#__PURE__*/_jsxDEV(StepContentWrap, {\n        children: /*#__PURE__*/_jsxDEV(CardListing, {\n          children: filteredList.map((data, i) => {\n            return /*#__PURE__*/_jsxDEV(OrganizationCardStyle, {\n              className: `${activeIndex - 1 === i && \"selected\"}`,\n              handleSelect: () => handleSelect(i + 1),\n              ...data,\n              src: props.CardListData[i].src\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StepFooter, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: `${activeIndex ? \"\" : \"disable\"}`,\n        onClick: props.handleNextClicked,\n        children: t(\"home.stepper_data.next_step_btn\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StepTwo, \"pzPLt9gfkJldVCmHQneMlrMF6kQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = StepTwo;\nexport default StepTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepTwo\");","map":{"version":3,"sources":["/Users/mac/Documents/Project/shophero/src/components/StepTwo/StepTwo.js"],"names":["React","StepTwoStyle","FilterPanel","FilterBox","WorkshopCount","StepFooter","StepContent","InputSearch","CategoryButton","PopOverStyle","CheckBoxWrap","CardListing","StepContentWrap","OrganizationCardStyle","Button","Checkbox","FormControlLabel","useTranslation","StepTwo","props","t","anchorEl","setAnchorEl","useState","searchText","setSeachText","activeIndex","setActiveIndex","selectedCategories","setSelectedCategories","handleSelect","index","handleClick","event","currentTarget","handleClose","open","Boolean","filteredList","returnObjects","filter","cl","length","includes","category","name","toLowerCase","search","e","target","value","vertical","horizontal","map","i","checked","filtered","c","title","CardListData","data","src","handleNextClicked"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StepTwoStyle,\n  FilterPanel,\n  FilterBox,\n  WorkshopCount,\n  StepFooter,\n  StepContent,\n  InputSearch,\n  CategoryButton,\n  PopOverStyle,\n  CheckBoxWrap,\n  CardListing,\n  StepContentWrap,\n  OrganizationCardStyle,\n} from \"./StepTwo.styles\";\nimport Button from \"../Button/Button\";\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport \"../../i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nconst StepTwo = (props) => {\n  const { t } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchText, setSeachText] = React.useState(\"\");\n  const [activeIndex, setActiveIndex] = React.useState(false);\n  const [selectedCategories, setSelectedCategories] = React.useState([]);\n\n  const handleSelect = (index) => {\n    setActiveIndex(index);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const filteredList = t(\"home.stepper_data.step_two.card_list\", {\n    returnObjects: true,\n  })\n    .filter(\n      (cl) =>\n        !selectedCategories.length ||\n        selectedCategories.includes(\"all\") ||\n        selectedCategories.includes(cl.category)\n    )\n    .filter(\n      (cl) => cl.name.toLowerCase().search(searchText.toLowerCase()) !== -1\n    );\n\n  return (\n    <StepTwoStyle>\n      <FilterPanel>\n        <FilterBox className={`${anchorEl ? \"active\" : \"\"}`}>\n          <InputSearch\n            placeholder={t(\"home.stepper_data.step_one.search_placeholder\")}\n            value={searchText}\n            onChange={(e) => setSeachText(e.target.value)}\n          />\n          <CategoryButton aria-describedby=\"category\" onClick={handleClick}>\n            {t(\"home.stepper_data.step_two.category_btn\")}\n          </CategoryButton>\n          <PopOverStyle\n            id=\"category\"\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"right\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n          >\n            <CheckBoxWrap>\n              {t(\"home.stepper_data.step_two.category_data\", {\n                returnObjects: true,\n              }).map((category, i) => {\n                return (\n                  <FormControlLabel\n                    key={i}\n                    control={\n                      <Checkbox\n                        name={category.name}\n                        checked={selectedCategories.includes(category.name)}\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            if (\n                              category.name ===\n                              t(\"home.stepper_data.step_two.category_data\", {\n                                returnObjects: true,\n                              })[0].name\n                            ) {\n                              setSelectedCategories([\n                                t(\"home.stepper_data.step_two.category_data\", {\n                                  returnObjects: true,\n                                })[0].name,\n                              ]);\n                            } else {\n                              const filtered =\n                                selectedCategories.length === 1 &&\n                                selectedCategories.includes(\n                                  t(\n                                    \"home.stepper_data.step_two.category_data\",\n                                    {\n                                      returnObjects: true,\n                                    }\n                                  )[0].name\n                                )\n                                  ? selectedCategories.filter(\n                                      (category) =>\n                                        category !==\n                                        t(\n                                          \"home.stepper_data.step_two.category_data\",\n                                          {\n                                            returnObjects: true,\n                                          }\n                                        )[0].name\n                                    )\n                                  : selectedCategories;\n                              setSelectedCategories([\n                                ...filtered,\n                                category.name,\n                              ]);\n                            }\n                          } else {\n                            const filtered = selectedCategories.filter(\n                              (c) => c !== category.name\n                            );\n                            setSelectedCategories([...filtered]);\n                          }\n                        }}\n                      />\n                    }\n                    label={category.title}\n                  />\n                );\n              })}\n            </CheckBoxWrap>\n          </PopOverStyle>\n        </FilterBox>\n        <WorkshopCount>\n          {props.CardListData.length}{\" \"}\n          {t(\"home.stepper_data.step_two.org_title\")}\n        </WorkshopCount>\n      </FilterPanel>\n      <StepContent>\n        <StepContentWrap>\n          <CardListing>\n            {filteredList.map((data, i) => {\n              return (\n                <OrganizationCardStyle\n                  className={`${activeIndex - 1 === i && \"selected\"}`}\n                  handleSelect={() => handleSelect(i + 1)}\n                  key={i}\n                  {...data}\n                  src={props.CardListData[i].src}\n                />\n              );\n            })}\n          </CardListing>\n        </StepContentWrap>\n      </StepContent>\n      <StepFooter>\n        <Button\n          className={`${activeIndex ? \"\" : \"disable\"}`}\n          onClick={props.handleNextClicked}\n        >\n          {t(\"home.stepper_data.next_step_btn\")}\n        </Button>\n      </StepFooter>\n    </StepTwoStyle>\n  );\n};\n\nexport default StepTwo;\n"]},"metadata":{},"sourceType":"module"}