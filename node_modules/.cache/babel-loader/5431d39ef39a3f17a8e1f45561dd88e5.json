{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mac/Documents/Project/shophero/src/components/NewsletterForm/NewsletterForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport { Form, InputFieldRow, Input, Button, ErrorMessage } from \"./NewsletterForm.styles\";\nimport \"../../i18n\";\nimport { useTranslation } from \"react-i18next\";\nimport * as Yup from \"yup\";\n\nconst NewsletterForm = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const NewsletterSchema = Yup.object().shape({\n    email: Yup.string().email(t(\"newsletter_form.email_imvalidate\")).required(t(\"newsletter_form.email_validate\"))\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    validationSchema: NewsletterSchema,\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(InputFieldRow, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email,\n          placeholder: t(\"newsletter_form.placeholder\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsletterForm, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = NewsletterForm;\nexport default NewsletterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsletterForm\");","map":{"version":3,"sources":["/Users/mac/Documents/Project/shophero/src/components/NewsletterForm/NewsletterForm.js"],"names":["React","Formik","Form","InputFieldRow","Input","Button","ErrorMessage","useTranslation","Yup","NewsletterForm","t","NewsletterSchema","object","shape","email","string","required","values","setSubmitting","setTimeout","alert","JSON","stringify","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SACEC,IADF,EAEEC,aAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,YALF,QAMO,yBANP;AAOA,OAAO,YAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAQH,cAAc,EAA5B;AAEA,QAAMI,gBAAgB,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,KAAK,EAAEN,GAAG,CAACO,MAAJ,GACJD,KADI,CACEJ,CAAC,CAAC,kCAAD,CADH,EAEJM,QAFI,CAEKN,CAAC,CAAC,gCAAD,CAFN;AADmC,GAAnB,CAAzB;AAMA,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KADjB;AAEE,IAAA,gBAAgB,EAAEH,gBAFpB;AAGE,IAAA,QAAQ,EAAE,CAACM,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvCC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAC,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KARH;AAAA,cAUG,CAAC;AACAD,MAAAA,MADA;AAEAM,MAAAA,MAFA;AAGAC,MAAAA,OAHA;AAIAC,MAAAA,YAJA;AAKAC,MAAAA,UALA;AAMAC,MAAAA,YANA;AAOAC,MAAAA;AAPA,KAAD,kBASC,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAED,YAAhB;AAAA,6BACE,QAAC,aAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,QAAQ,EAAEF,YAHZ;AAIE,UAAA,MAAM,EAAEC,UAJV;AAKE,UAAA,KAAK,EAAET,MAAM,CAACH,KALhB;AAME,UAAA,WAAW,EAAEJ,CAAC,CAAC,6BAAD;AANhB;AAAA;AAAA;AAAA;AAAA,gBADF,EASGa,MAAM,CAACT,KAAP,IAAgBU,OAAO,CAACV,KAAxB,iBACC,QAAC,YAAD;AAAA,oBAAeS,MAAM,CAACT;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAYE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAEc;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAhDD;;GAAMnB,c;UACUF,c;;;KADVE,c;AAkDN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport {\n  Form,\n  InputFieldRow,\n  Input,\n  Button,\n  ErrorMessage,\n} from \"./NewsletterForm.styles\";\nimport \"../../i18n\";\nimport { useTranslation } from \"react-i18next\";\nimport * as Yup from \"yup\";\n\nconst NewsletterForm = () => {\n  const { t } = useTranslation();\n\n  const NewsletterSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(t(\"newsletter_form.email_imvalidate\"))\n      .required(t(\"newsletter_form.email_validate\")),\n  });\n\n  return (\n    <Formik\n      initialValues={{ email: \"\" }}\n      validationSchema={NewsletterSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n      }) => (\n        <Form onSubmit={handleSubmit}>\n          <InputFieldRow>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              placeholder={t(\"newsletter_form.placeholder\")}\n            />\n            {errors.email && touched.email && (\n              <ErrorMessage>{errors.email}</ErrorMessage>\n            )}\n            <Button type=\"submit\" disabled={isSubmitting} />\n          </InputFieldRow>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default NewsletterForm;\n"]},"metadata":{},"sourceType":"module"}