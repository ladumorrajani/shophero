{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mac/Documents/Project/shophero/src/components/LangaugeSelect/LangaugeSelect.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport Popover from \"@material-ui/core/Popover\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Button } from \"./LangaugeSelect.styles\";\nconst languageMap = {\n  en: {\n    label: \"English\",\n    dir: \"ltr\",\n    active: true\n  },\n  es: {\n    label: \"Spanish\",\n    dir: \"ltr\",\n    active: false\n  }\n};\n\nconst LanguageSelect = () => {\n  _s();\n\n  var _Object$keys;\n\n  const selected = localStorage.getItem(\"i18nextLng\") || \"en\";\n  const {\n    t\n  } = useTranslation();\n  const [menuAnchor, setMenuAnchor] = React.useState(null);\n  React.useEffect(() => {\n    document.body.dir = languageMap[selected].dir;\n  }, [menuAnchor, selected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-select-root\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"language-select-btn\",\n      onClick: ({\n        currentTarget\n      }) => setMenuAnchor(currentTarget),\n      children: languageMap[selected].label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      open: !!menuAnchor,\n      anchorEl: menuAnchor,\n      onClose: () => setMenuAnchor(null),\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: t(\"select_language\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), (_Object$keys = Object.keys(languageMap)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => {\n              i18next.changeLanguage(item);\n              setMenuAnchor(null);\n            },\n            children: languageMap[item].label\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LanguageSelect, \"ob0gS0xjhsgERfGZhY31F1BgrMs=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LanguageSelect;\nexport default LanguageSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageSelect\");","map":{"version":3,"sources":["/Users/mac/Documents/Project/shophero/src/components/LangaugeSelect/LangaugeSelect.js"],"names":["React","useTranslation","i18next","Popover","List","ListItem","ListSubheader","Button","languageMap","en","label","dir","active","es","LanguageSelect","selected","localStorage","getItem","t","menuAnchor","setMenuAnchor","useState","useEffect","document","body","currentTarget","vertical","horizontal","Object","keys","map","item","changeLanguage"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,EAAE,EAAE;AAAEC,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,GAAG,EAAE,KAAzB;AAAgCC,IAAAA,MAAM,EAAE;AAAxC,GADc;AAElBC,EAAAA,EAAE,EAAE;AAAEH,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,GAAG,EAAE,KAAzB;AAAgCC,IAAAA,MAAM,EAAE;AAAxC;AAFc,CAApB;;AAKA,MAAME,cAAc,GAAG,MAAM;AAAA;;AAAA;;AAC3B,QAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,IAAvD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQjB,cAAc,EAA5B;AAEA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BpB,KAAK,CAACqB,QAAN,CAAe,IAAf,CAApC;AACArB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,QAAQ,CAACC,IAAT,CAAcb,GAAd,GAAoBH,WAAW,CAACO,QAAD,CAAX,CAAsBJ,GAA1C;AACD,GAFD,EAEG,CAACQ,UAAD,EAAaJ,QAAb,CAFH;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,OAAO,EAAE,CAAC;AAAEU,QAAAA;AAAF,OAAD,KAAuBL,aAAa,CAACK,aAAD,CAF/C;AAAA,gBAIGjB,WAAW,CAACO,QAAD,CAAX,CAAsBL;AAJzB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AACE,MAAA,IAAI,EAAE,CAAC,CAACS,UADV;AAEE,MAAA,QAAQ,EAAEA,UAFZ;AAGE,MAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,IAAD,CAH9B;AAIE,MAAA,YAAY,EAAE;AACZM,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAJhB;AAQE,MAAA,eAAe,EAAE;AACfD,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OARnB;AAAA,6BAaE;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,aAAD;AAAA,sBAAgBT,CAAC,CAAC,iBAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADF,kBAEGU,MAAM,CAACC,IAAP,CAAYrB,WAAZ,CAFH,iDAEG,aAA0BsB,GAA1B,CAA+BC,IAAD,iBAC7B,QAAC,QAAD;AACE,YAAA,MAAM,MADR;AAGE,YAAA,OAAO,EAAE,MAAM;AACb7B,cAAAA,OAAO,CAAC8B,cAAR,CAAuBD,IAAvB;AACAX,cAAAA,aAAa,CAAC,IAAD,CAAb;AACD,aANH;AAAA,sBAQGZ,WAAW,CAACuB,IAAD,CAAX,CAAkBrB;AARrB,aAEOqB,IAFP;AAAA;AAAA;AAAA;AAAA,kBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAlDD;;GAAMjB,c;UAEUb,c;;;KAFVa,c;AAoDN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport Popover from \"@material-ui/core/Popover\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Button } from \"./LangaugeSelect.styles\";\n\nconst languageMap = {\n  en: { label: \"English\", dir: \"ltr\", active: true },\n  es: { label: \"Spanish\", dir: \"ltr\", active: false },\n};\n\nconst LanguageSelect = () => {\n  const selected = localStorage.getItem(\"i18nextLng\") || \"en\";\n  const { t } = useTranslation();\n\n  const [menuAnchor, setMenuAnchor] = React.useState(null);\n  React.useEffect(() => {\n    document.body.dir = languageMap[selected].dir;\n  }, [menuAnchor, selected]);\n\n  return (\n    <div className=\"language-select-root\">\n      <Button\n        className=\"language-select-btn\"\n        onClick={({ currentTarget }) => setMenuAnchor(currentTarget)}\n      >\n        {languageMap[selected].label}\n      </Button>\n      <Popover\n        open={!!menuAnchor}\n        anchorEl={menuAnchor}\n        onClose={() => setMenuAnchor(null)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n      >\n        <div>\n          <List>\n            <ListSubheader>{t(\"select_language\")}</ListSubheader>\n            {Object.keys(languageMap)?.map((item) => (\n              <ListItem\n                button\n                key={item}\n                onClick={() => {\n                  i18next.changeLanguage(item);\n                  setMenuAnchor(null);\n                }}\n              >\n                {languageMap[item].label}\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </Popover>\n    </div>\n  );\n};\n\nexport default LanguageSelect;\n"]},"metadata":{},"sourceType":"module"}